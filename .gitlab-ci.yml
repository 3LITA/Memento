image: docker:19.03.1
services:
  - docker:19.03.1-dind

stages:
  - Build
  - Test
  - Deploy

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG
  DOCKER_HOST: tcp://docker:2375/
  DOCKER_DRIVER: overlay2
  CONTAINER_APP_IMAGE: $CI_REGISTRY_IMAGE:latest

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Build New Images:
  stage: Build
  script:
    - docker build --cache-from $CONTAINER_TEST_IMAGE -t $CONTAINER_TEST_IMAGE --target dev .
    - docker push $CONTAINER_TEST_IMAGE

Code Health:
  stage: Test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run --rm $CONTAINER_TEST_IMAGE pytest --mypy --flake8 --isort --black app

Application Tests:
  stage: Test
  image:
    name: docker/compose
    entrypoint: ["/bin/sh", "-c"]
  script:
    - docker-compose -p anki-tests-${CI_JOB_ID} -f tests/docker-compose.yml run --rm -T app
  after_script:
    - docker rm -fv anki-tests-${CI_JOB_ID}_app_1 anki-tests-${CI_JOB_ID}_postgres_1 || true
    - docker network rm anki-tests-${CI_JOB_ID}_default || true

Deploy:
  stage: Deploy
  only:
    refs:
      - master
  before_script:
    - 'command -v ssh-agent >/dev/null || ( apt-get update -y && apt-get install openssh-client -y )'
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
  script:
    - docker build --cache-from $CONTAINER_TEST_IMAGE -t $CONTAINER_APP_IMAGE --target app .
    - scp ./docker-compose.deploy.yml deploy@35.228.107.28:~/memento/docker-compose.yml
    - |
      ssh deploy@35.228.107.28 \
      "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN registry.gitlab.com && \
      cd memento && docker-compose pull && docker-compose up"
