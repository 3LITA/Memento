image: docker:19.03.1
services:
  - docker:19.03.1-dind

stages:
  - Build
  - Test

variables:
  CONTAINER_TEST_IMAGE: $CI_REGISTRY_IMAGE:$CI_COMMIT_REF_SLUG

before_script:
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY

Build New Images:
  stage: Build
  script:
    - docker build --cache-from $CONTAINER_TEST_IMAGE --pull -t $CONTAINER_TEST_IMAGE .
    - docker push $CONTAINER_TEST_IMAGE

Code Health:
  stage: Test
  script:
    - docker pull $CONTAINER_TEST_IMAGE
    - docker run --rm $CONTAINER_TEST_IMAGE pytest --mypy --flake8 --isort --black app

Application Tests:
  stage: Test
  script:
    - apk add gcc
    - apk add --update python2-dev py-pip && pip install docker-compose
    - docker-compose -p anki-tests-${CI_JOB_ID} -f tests/docker-compose.yml run --rm -T app
  after_script:
    - docker rm -fv anki-tests-${CI_JOB_ID}_app_1 anki-tests-${CI_JOB_ID}_postgres_1 || true
    - docker network rm anki-tests-${CI_JOB_ID}_default || true
